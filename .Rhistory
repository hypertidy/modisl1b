dim(lon)
dim(r)
dim(r) / dim(lon)
dim(lon) * c(6, 9)
dim(lon) * c(6, 9, 1)
dim(lon) * c(5, 8, 1)
system(sprintf("gdal_translate %s arrgh.vrt -of VRT'", sdsnames))
system(sprintf("gdal_translate %s arrgh.vrt -of VRT", sdsnames))
unlink("arrgh.tif")
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)), add = TRUE)
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
unlink("arrgh.tif")
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
lat <- raster(gsub(":6", ":2", sdsnames))
v <- resample(setExtent(r, lon), lon)
plot(values(lon), values(lat), col = grey(seq(0, 1, length = ncell(lon)))[scl(values(v)] , pch = ".")
plot(values(lon), values(lat), col = grey(seq(0, 1, length = ncell(lon)))[scl(values(v))] , pch = ".")
v
dim(lon)
plot(v)
length(values(lon))
length(values(lat))
length(values(v))
lat
r
lon <- raster(gsub(":6", ":1", sdsnames))
lat <- raster(gsub(":6", ":2", sdsnames))
lon
lat
lat <- raster(gsub(":6", ":0", sdsnames))
lon
lat
r
v <- resample(setExtent(r, lon), lon)
plot(values(lon), values(lat), col = grey(seq(0, 1, length = 256))[scl(values(v)) * 255 + 1 ] , pch = ".")
plot(countriesHigh)
plot(values(lon), values(lat), col = grey(seq(0, 1, length = 256))[scl(values(v)) * 255 + 1 ] , pch = ".")
plot(countriesHigh, add = TRUE)
plot(countriesHigh, add = TRUE, col = "red")
plot(values(lon), values(lat), col = grey(seq(0, 1, length = 256))[scl(values(v)) * 255 + 1 ] , pch = ".")
plot(countriesHigh, add = TRUE, border = "red")
sdsnames
r <- raster(sdsname, band = 1)
r <- raster(sdsnames, band = 1)
v <- resample(setExtent(r, lon), lon)
plot(values(lon), values(lat), col = grey(seq(0, 1, length = 256))[scl(values(v)) * 255 + 1 ] , pch = ".")
plot(countriesHigh, add = TRUE, border = "red")
fs[4]
dp
unlink("arrgh.tif")
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
unlink("arrgh.tif")
#system(sprintf("gdalwarp %s arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'", sdsnames))
#system(sprintf("gdal_translate %s arrgh.vrt -of VRT", sdsnames))
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
r
unlink("arrgh.tif")
#system(sprintf("gdalwarp %s arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'", sdsnames))
#system(sprintf("gdal_translate %s arrgh.vrt -of VRT", sdsnames))
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
unlink("arrgh.tif")
#system(sprintf("gdalwarp %s arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'", sdsnames))
#system(sprintf("gdal_translate %s arrgh.vrt -of VRT", sdsnames))
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
r2 <- raster('band1.tif')
r2 <- raster(file.path(dp, 'band1.tif'))
plot(r2, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
library(rgdal2)
devtools::install_github("rgdal2", "thk686")
system("gdal-config")
devtools::install_github("thk686/rgdal2")
library(rgdal2)
unlink("arrgh.tif")
#system(sprintf("gdalwarp %s arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'", sdsnames))
#system(sprintf("gdal_translate %s arrgh.vrt -of VRT", sdsnames))
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
unlink("arrgh.tif")
#system(sprintf("gdalwarp %s arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'", sdsnames))
#system(sprintf("gdal_translate %s arrgh.vrt -of VRT", sdsnames))
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
unlink("arrgh.tif")
#system(sprintf("gdalwarp %s arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'", sdsnames))
#system(sprintf("gdal_translate %s arrgh.vrt -of VRT", sdsnames))
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
unlink("arrgh.tif")
#system(sprintf("gdalwarp %s arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'", sdsnames))
#system(sprintf("gdal_translate %s arrgh.vrt -of VRT", sdsnames))
system("gdalwarp arrgh.vrt arrgh.tif -t_srs '+proj=laea +lon_0=60 +lat_0=-70 +ellps=WG84'")
r <- raster("arrgh.tif", band = 1)
##r[!r > 0] <- NA_real_
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
commonprojections
raadtools::commonprojections
x <- "/rdsi/PRIVATE/scratch/gdalthing/MOD021KM.A2012062.0455.006.2014220083128.hdf"
ginfo <- system(sprintf("gdalinfo %s", x), intern = TRUE)
ginfo[grep("Latitude", ginfo)]
sdslat <- ginfo[grep("Latitude", ginfo) - 1]
sdslat
sapply(strsplit(sdslat, "="), "[", 2)
extractSDS <- function(txt, pattern) {
sapply(strsplit(ginfo[grep(pattern, txt) - 1], "="), "[", 2)
}
MOD021 <- function(x) {
x <- "/rdsi/PRIVATE/scratch/gdalthing/MOD021KM.A2012062.0455.006.2014220083128.hdf"
#   MOD021KM.A2012062.0455.006.2014220083128.hdf
#   SUBDATASET_20_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":0
#   SUBDATASET_20_DESC=[406x271] Latitude (32-bit floating-point)
#   SUBDATASET_21_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":1
#   SUBDATASET_21_DESC=[406x271] Longitude (32-bit floating-point)
#   SUBDATASET_22_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":2
#   SUBDATASET_22_DESC=[15x2030x1354] EV_1KM_RefSB (16-bit unsigned integer)
ginfo <- system(sprintf("gdalinfo %s", x), intern = TRUE)
sdslat <- extractSDS(ginfo, "Latitude")
}
ginfo <- system(sprintf("gdalinfo %s", x), intern = TRUE)
sdslat <- extractSDS(ginfo, "Latitude")
sdslat
sdsdat <- extractSDS(ginfo, "EV_1KM_RefSB")
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB"), function(tok) extractSDS(ginfo, tok))
sds
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB (16"), function(tok) extractSDS(ginfo, tok))
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB \\(16"), function(tok) extractSDS(ginfo, tok))
sds
dat <- lapply(sds, raster)
names(dat)
dat
x
arr <- MOD021(x)
lon <- resample(setExtent(arr$Longitude, extent(arr[[3]])))
extractSDS <- function(txt, pattern) {
sapply(strsplit(ginfo[grep(pattern, txt) - 1], "="), "[", 2)
}
MOD021 <- function(x) {
x <- "/rdsi/PRIVATE/scratch/gdalthing/MOD021KM.A2012062.0455.006.2014220083128.hdf"
#   MOD021KM.A2012062.0455.006.2014220083128.hdf
#   SUBDATASET_20_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":0
#   SUBDATASET_20_DESC=[406x271] Latitude (32-bit floating-point)
#   SUBDATASET_21_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":1
#   SUBDATASET_21_DESC=[406x271] Longitude (32-bit floating-point)
#   SUBDATASET_22_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":2
#   SUBDATASET_22_DESC=[15x2030x1354] EV_1KM_RefSB (16-bit unsigned integer)
ginfo <- system(sprintf("gdalinfo %s", x), intern = TRUE)
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB \\(16"), function(tok) extractSDS(ginfo, tok))
lapply(sds, raster)
}
arr <- MOD021(x)
lon <- resample(setExtent(arr$Longitude, extent(arr[[3]])))
extent(arr[[3]])}
extent(arr[[3]])
extent
detach(package:rgdal2, unload = TREU)
detach(package:rgdal2, unload = TRUE)
lon <- resample(setExtent(arr$Longitude, extent(arr[[3]])))
lon <- resample(setExtent(arr$Longitude, raster::extent(arr[[3]])))
lon <- resample(setExtent(arr$Longitude, raster::extent(arr[[3]])), arr[[3]])
?resample
dm <- dim(arr[[3]])
dm
inds <- sapply(dim(arr[[3]])[1:2], seq)
inds
bigdim <- dim(arr[[3]])[1:2]
smalldim <- dim(arr[[1]])[1:2]
bigdim
smalldim
lonind <- seq(1, bigdim[1], length = smalldim[1])
latind <- seq(1, bigdim[2], length = smalldim[2])
row(matrix(1:12))
row(matrix(1:12, 3))
bigdim
smalldim
image(arr[[3]], col = grey(seq(0, 1, length = 256)), useRaster = TRUE)
image(arr[[3]], col = grey(seq(0, 1, length = 256)), useRaster = TRUE, asp = 1)
library(dplyr)
gcp <- data_frame(X = col(arr$Longitude), Y = row(arr$Latitude), Pixel =  as.vector(arr$Longitude), Line = as.vector(arr$Latitude))
gcp <- data_frame(X = col(as.matrix(arr$Longitude)), Y = row(as.matrix(arr$Latitude)), Pixel =  as.vector(arr$Longitude), Line = as.vector(arr$Latitude))
gcp <- data_frame(X = col(as.matrix(arr$Longitude)), Y = row(as.matrix(arr$Latitude)), Pixel =  as.vector(values(arr$Longitude)), Line = as.vector(values(arr$Latitude)))
arr
gcp <- data_frame(X = as.vector(col(as.matrix(arr$Longitude))), Y = as.vector(row(as.matrix(arr$Latitude))),
Pixel =  as.vector(values(arr$Longitude)), Line = as.vector(values(arr$Latitude)))
gcp
range(values(arr$Longitude))
gcpline <- sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Pixel + 0.5, gcp$Line + 0.5,
gcp$X, gcp$Y)
head(gcpline)
gcp <- data_frame(Pixel = as.vector(col(as.matrix(arr$Longitude))), Line = as.vector(row(as.matrix(arr$Latitude))),
X =  as.vector(values(arr$Longitude)), Y = as.vector(values(arr$Latitude)))
gcpline <- sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Pixel + 0.5, gcp$Line + 0.5,
gcp$X, gcp$Y)
head(gcpline)
gcp <- data_frame(Pixel = as.vector(col(as.matrix(arr$Longitude))) - 1, Line = as.vector(row(as.matrix(arr$Latitude))) - 1,
X =  as.vector(values(arr$Longitude)), Y = as.vector(values(arr$Latitude)))
gcpline <- sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Pixel + 0.5, gcp$Line + 0.5,
gcp$X, gcp$Y)
gcpline <- c('<GCPList Projection="EPSG:4326">',
sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Pixel + 0.5, gcp$Line + 0.5,
gcp$X, gcp$Y),
'</GCPList>')
x
system(sprintf("gdal_translate %s bark.vrt -of VRT", x))
system(sprintf("gdal_translate %s bark.vrt -of VRT", extractSDS(x)[3]))
system(sprintf("gdal_translate %s bark.vrt -of VRT", extractSDS(x, "EV_1KM_RefSB \\(16")))
extractSDS(x, "EV_1KM_RefSB \\(16")
x
ginfo <- system(sprintf("gdalinfo %s", x), intern = TRUE)
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB \\(16"), function(tok) extractSDS(ginfo, tok))
sds
extractSDS <- function(x, pattern) {
txt <- system(sprintf("gdalinfo %s", x), intern = TRUE)
sapply(strsplit(ginfo[grep(pattern, txt) - 1], "="), "[", 2)
}
extractSDS(x, "EV_1KM_RefSB \\(16")
extractSDS <- function(x, pattern) {
txt <- system(sprintf("gdalinfo %s", x), intern = TRUE)
sapply(strsplit(ginfo[grep(pattern, txt) - 1], "="), "[", 2)
}
MOD021 <- function(x) {
x <- "/rdsi/PRIVATE/scratch/gdalthing/MOD021KM.A2012062.0455.006.2014220083128.hdf"
#   MOD021KM.A2012062.0455.006.2014220083128.hdf
#   SUBDATASET_20_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":0
#   SUBDATASET_20_DESC=[406x271] Latitude (32-bit floating-point)
#   SUBDATASET_21_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":1
#   SUBDATASET_21_DESC=[406x271] Longitude (32-bit floating-point)
#   SUBDATASET_22_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":2
#   SUBDATASET_22_DESC=[15x2030x1354] EV_1KM_RefSB (16-bit unsigned integer)
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB \\(16"), function(tok) extractSDS(x, tok))
lapply(sds, raster)
}
system(sprintf("gdal_translate %s bark.vrt -of VRT", extractSDS(x, "EV_1KM_RefSB \\(16")))
writeLines(gcpline, "gcp.txt")
tx <- readLines("bark.vrt")
tx
tx <- readLines("bark.vrt")
tx
tx <- c(tx[1:3], gcpline, tx[4:14])
writeLines(tx, "ark.vrt")
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
tx <- readLines("bark.vrt")
tx
tx <- c(tx[1], gcpline, tx[2:14])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
gcp <- data_frame(Pixel = as.vector(col(as.matrix(arr$Longitude))) - 1, Line = as.vector(row(as.matrix(arr$Latitude))) - 1,
X =  as.vector(values(arr$Longitude)), Y = as.vector(values(arr$Latitude)))
gcpline <- c('<GCPList Projection="EPSG:4326">',
sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Line + 0.5, gcp$Pixel + 0.5,
gcp$X, gcp$Y),
'</GCPList>')
tx <- readLines("bark.vrt")
tx <- c(tx[1], gcpline, tx[2:14])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
gcpline <- c('<GCPList Projection="EPSG:4326">',
sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Line + 0.5, gcp$Pixel + 0.5,
gcp$Y, gcp$X),
'</GCPList>')
system(sprintf("gdal_translate %s bark.vrt -of VRT", extractSDS(x, "EV_1KM_RefSB \\(16")))
tx <- readLines("bark.vrt")
tx <- c(tx[1], gcpline, tx[2:14])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
tx <- readLines("bark.vrt")
tx
tx <- readLines("bark.vrt")
tx <- c(tx[1], gcpline, tx[2:length(tx)])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
gcp <- data_frame(Line = as.vector(col(as.matrix(arr$Longitude))) - 1, Pixel = as.vector(row(as.matrix(arr$Latitude))) - 1,
Y =  as.vector(values(arr$Longitude)), X = as.vector(values(arr$Latitude)))
gcpline <- c('<GCPList Projection="EPSG:4326">',
sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Line + 0.5, gcp$Pixel + 0.5,
gcp$Y, gcp$X),
'</GCPList>')
system(sprintf("gdal_translate %s bark.vrt -of VRT", extractSDS(x, "EV_1KM_RefSB \\(16")))
tx <- readLines("bark.vrt")
tx <- c(tx[1], gcpline, tx[2:length(tx)])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
gcp <- data_frame(Pixel = as.vector(row(as.matrix(arr$Longitude))) - 1, Line = as.vector(col(as.matrix(arr$Latitude))) - 1,
X =  as.vector(values(arr$Longitude)), Y = as.vector(values(arr$Latitude)))
gcpline <- c('<GCPList Projection="EPSG:4326">',
sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Pixel + 0.5, gcp$Line + 0.5,
gcp$X, gcp$Y),
'</GCPList>')
system(sprintf("gdal_translate %s bark.vrt -of VRT", extractSDS(x, "EV_1KM_RefSB \\(16")))
tx <- readLines("bark.vrt")
tx <- c(tx[1], gcpline, tx[2:length(tx)])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
dim(arr$Longitude)
matrix(1:12, 3)
col(matrix(1:12, 3))
dim(matrix(1:12, 3))
gcp <- data_frame(Pixel = as.vector(row(as.matrix(arr$Longitude))) - 1, Line = as.vector(col(as.matrix(arr$Latitude))) - 1,
X =  as.vector(values(arr$Longitude)), Y = as.vector(values(arr$Latitude)))
gcpline <- c('<GCPList Projection="EPSG:4326">',
sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Pixel + 0.5, gcp$Line + 0.5,
gcp$X, gcp$Y),
'</GCPList>')
system(sprintf("gdal_translate %s bark.vrt -of VRT", extractSDS(x, "EV_1KM_RefSB \\(16")))
tx <- readLines("bark.vrt")
tx <- c(tx[1], gcpline, tx[2:length(tx)])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
gcp
tail(gcp)
range(lonind)
pl <- expand.grid(lonind, latind)
pl <- expand.grid(lonind, latind)
gcp <- data_frame(Pixel = pl[,1] - 1, Line = pl[,2] - 1,
X =  as.vector(values(arr$Longitude)), Y = as.vector(values(arr$Latitude)))
gcpline <- c('<GCPList Projection="EPSG:4326">',
sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Pixel + 0.5, gcp$Line + 0.5,
gcp$X, gcp$Y),
'</GCPList>')
system(sprintf("gdal_translate %s bark.vrt -of VRT", extractSDS(x, "EV_1KM_RefSB \\(16")))
tx <- readLines("bark.vrt")
tx <- c(tx[1], gcpline, tx[2:length(tx)])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
getwd()
r <- raster("/rdsi/PRIVATE/scratch/gdalthing/out.tif")
plot(r, col = grey(seq(0, 1, length = 256)))
plot(w, add = TRUE)
w
projection(w)
projection(r)
tx <- readLines("bark.vrt")
tx <- c(tx[1], gcpline, tx[2:length(tx)])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
bigdim
smalldim
gcp <- data_frame(Pixel = pl[,2] - 1, Line = pl[,1] - 1,
X =  as.vector(values(arr$Longitude)), Y = as.vector(values(arr$Latitude)))
gcpline <- c('<GCPList Projection="EPSG:4326">',
sprintf('<GCP Id="%i" Info="%i" Pixel="%f" Line="%f" X="%f" Y="%f" Z="0.0" />',
seq(nrow(gcp)), seq(nrow(gcp)), gcp$Pixel + 0.5, gcp$Line + 0.5,
gcp$X, gcp$Y),
'</GCPList>')
#system(sprintf("gdal_translate %s bark.vrt -of VRT", extractSDS(x, "EV_1KM_RefSB \\(16")))
tx <- readLines("bark.vrt")
tx <- c(tx[1], gcpline, tx[2:length(tx)])
writeLines(tx, "/rdsi/PRIVATE/scratch/gdalthing/ark.vrt")
r <- raster("/rdsi/PRIVATE/scratch/gdalthing/out.tif")
plot(r, col = grey(seq(0, 1, length = 256)))
extractSDS <- function(x, pattern) {
txt <- system(sprintf("gdalinfo %s", x), intern = TRUE)
sapply(strsplit(ginfo[grep(pattern, txt) - 1], "="), "[", 2)
}
MOD021 <- function(x) {
x <- "/rdsi/PRIVATE/scratch/gdalthing/MOD021KM.A2012062.0455.006.2014220083128.hdf"
#   MOD021KM.A2012062.0455.006.2014220083128.hdf
#   SUBDATASET_20_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":0
#   SUBDATASET_20_DESC=[406x271] Latitude (32-bit floating-point)
#   SUBDATASET_21_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":1
#   SUBDATASET_21_DESC=[406x271] Longitude (32-bit floating-point)
#   SUBDATASET_22_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":2
#   SUBDATASET_22_DESC=[15x2030x1354] EV_1KM_RefSB (16-bit unsigned integer)
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB \\(16"), function(tok) extractSDS(x, tok))
lapply(sds, raster)
}
ls()
f
x
lo
sdsnames
getwd()
l <- MOD021(1)
MOD021 <- function(x) {
x <- "/rdsi/PRIVATE/scratch/gdalthing/MOD021KM.A2012062.0455.006.2014220083128.hdf"
#   MOD021KM.A2012062.0455.006.2014220083128.hdf
#   SUBDATASET_20_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":0
#   SUBDATASET_20_DESC=[406x271] Latitude (32-bit floating-point)
#   SUBDATASET_21_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":1
#   SUBDATASET_21_DESC=[406x271] Longitude (32-bit floating-point)
#   SUBDATASET_22_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":2
#   SUBDATASET_22_DESC=[15x2030x1354] EV_1KM_RefSB (16-bit unsigned integer)
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB \\(16"), function(tok) extractSDS(x, tok))
lapply(sds, raster)
}
l <- MOD021(1)
ginfo <- function(x) {
system(sprintf("gdalinfo %s", x), intern = TRUE)
}
extractSDS <- function(x, pattern) {
txt <- system(sprintf("gdalinfo %s", x), intern = TRUE)
sapply(strsplit(ginfo[grep(pattern, txt) - 1], "="), "[", 2)
}
MOD021 <- function(x) {
x <- "/rdsi/PRIVATE/scratch/gdalthing/MOD021KM.A2012062.0455.006.2014220083128.hdf"
#   MOD021KM.A2012062.0455.006.2014220083128.hdf
#   SUBDATASET_20_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":0
#   SUBDATASET_20_DESC=[406x271] Latitude (32-bit floating-point)
#   SUBDATASET_21_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":1
#   SUBDATASET_21_DESC=[406x271] Longitude (32-bit floating-point)
#   SUBDATASET_22_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":2
#   SUBDATASET_22_DESC=[15x2030x1354] EV_1KM_RefSB (16-bit unsigned integer)
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB \\(16"), function(tok) extractSDS(x, tok))
lapply(sds, raster)
}
l <- MOD021(1)
extractSDS <- function(x, pattern) {
txt <- system(sprintf("gdalinfo %s", x), intern = TRUE)
sapply(strsplit(txt[grep(pattern, txt) - 1], "="), "[", 2)
}
MOD021 <- function(x) {
x <- "/rdsi/PRIVATE/scratch/gdalthing/MOD021KM.A2012062.0455.006.2014220083128.hdf"
#   MOD021KM.A2012062.0455.006.2014220083128.hdf
#   SUBDATASET_20_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":0
#   SUBDATASET_20_DESC=[406x271] Latitude (32-bit floating-point)
#   SUBDATASET_21_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":1
#   SUBDATASET_21_DESC=[406x271] Longitude (32-bit floating-point)
#   SUBDATASET_22_NAME=HDF4_SDS:UNKNOWN:"MOD021KM.A2012062.0455.006.2014220083128.hdf":2
#   SUBDATASET_22_DESC=[15x2030x1354] EV_1KM_RefSB (16-bit unsigned integer)
sds <- sapply(c("Longitude", "Latitude", "EV_1KM_RefSB \\(16"), function(tok) extractSDS(x, tok))
lapply(sds, raster)
}
l <- MOD021(1)
l
image(l$Longitude)
image(l$Latitude)
as.matrix(l$Latitude[1,])
as.matrix(l$Latitude)[1]
as.matrix(l$Latitude)[1, ]
diff(as.matrix(l$Latitude)[1, ])
diff(as.matrix(l$Latitude)[, 1])
plot(as.matrix(l$Latitude)[, 1])
plot(as.matrix(l$Latitude)[, 1], pch = ".")
plot(as.matrix(l$Longitude)[, 1], pch = ".")
diff(as.matrix(l$Longitude)[, 1], pch = ".")
plot(as.matrix(l$Longitude)[1:10, 1], pch = ".")
plot(as.matrix(l$Longitude)[1:10, 1])
plot(as.matrix(l$Latitude)[1:10, 1])
plot(l$Latitude)
plot(l$Latitude[1:10, 1:10])
image(as.matrix(l$Latitude)[1:10, 1:10])
plot(as.matrix(l$Longitude)[, 1])
plot(as.matrix(l$Longitude)[, 1], cex = 0.3)
plot(as.matrix(l$Longitude)[1, ], cex = 0.3)
order(as.matrix(l$Latitude)[,1]
)
image(l[[3]], useRaster = TRUE)
image(l[[3]], useRaster = TRUE, col = grey(seq(0, 1, length = 256)))
image(l[[3]], useRaster = TRUE, col = grey(seq(0.2, 1, length = 256)))
image(l[[3]], useRaster = TRUE, col = grey(seq(0.05, 1, length = 256)))
image(l[[3]], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), breaks = seq(min(values(l[[3]])), 2500, length = 257))
min(values(l[[3]]))
max(values(l[[3]]))
tail(sort(values(l[[3]])))
tail(unique(sort(values(l[[3]]))))
image(l[[3]], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), breaks = seq(min(values(l[[3]])), 24205, length = 257))
image(l[[3]], useRaster = TRUE, interpolate = TRUE,  col = grey(seq(0, 1, length = 256)), breaks = seq(min(values(l[[3]])), 24205, length = 257))
order(as.matrix(l$Latitude)[,1])
order(as.matrix(l$Latitude)[,1])
order(as.matrix(l$Latitude)[,1] - as.matrix(l$Latitude)[,2])
order(as.matrix(l$Latitude)[,1]) - order(as.matrix(l$Latitude)[,2])
order(as.matrix(l$Latitude)[,1]) - order(as.matrix(l$Latitude)[,20])
lat0 <- as.matrix(lat0)
lat0 <- as.matrix(l$Latitude)
ord <- matrix(0, nrow(lat0), ncol(lat0))
for (i in seq(ncol(lat0))) ord[,i] <- order(lat0[,i], decreasing = TRUE))
for (i in seq(ncol(lat0))) ord[,i] <- order(lat0[,i], decreasing = TRUE)
plot(lat0[,1])
plot(lat0[,1], cex = 0.3)
plot(lat0[ord[,1],1], cex = 0.3)
diff(lat0[ord[,1],1], cex = 0.3)
approxfun(1:nrow(lat0), lat0[ord[,1],1])(seq(1, nrow(lat0), length = nrow(l[[3]])))
plot(approxfun(1:nrow(lat0), lat0[ord[,1],1])(seq(1, nrow(lat0), length = nrow(l[[3]]))), pch = ".")
plot(diff(approxfun(1:nrow(lat0), lat0[ord[,1],1])(seq(1, nrow(lat0), length = nrow(l[[3]]))), pch = "."))
dim(l[[3]])
dim(lat0)
plot(diff(approxfun(1:nrow(lat0), lat0[ord[,1],1])(seq(1, nrow(lat0), length = nrow(l[[3]]))), pch = "."))
plot(approxfun(1:nrow(lat0), lat0[ord[,1],1])(seq(1, nrow(lat0), length = nrow(l[[3]]))), pch = ".")
